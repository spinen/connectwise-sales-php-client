<?php
/**
 * Opportunity
 *
 * PHP version 5
 *
 * @category Class
 * @package  Spinen\ConnectWise\Clients\Sales
 * @author   Swaagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Sales API
 *
 * ConnectWise Sales API
 *
 * OpenAPI spec version: 1.0.0
 * Contact: platform@connectwise.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 *
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Spinen\ConnectWise\Clients\Sales\Spinen\ConnectWise\Clients\Sales\Model;

use \ArrayAccess;

/**
 * Opportunity Class Doc Comment
 *
 * @category    Class */
/**
 * @package     Spinen\ConnectWise\Clients\Sales
 * @author      Swagger Codegen team
 * @link        https://github.com/swagger-api/swagger-codegen
 */
class Opportunity implements ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      * @var string
      */
    protected static $swaggerModelName = 'Opportunity';

    /**
      * Array of property to type mappings. Used for (de)serialization
      * @var string[]
      */
    protected static $swaggerTypes = [
        'id' => 'int',
        'name' => 'string',
        'expected_close_date' => '\DateTime',
        'type' => '\Spinen\ConnectWise\Clients\Sales\Spinen\ConnectWise\Clients\Sales\Model\OpportunityTypeReference',
        'stage' => '\Spinen\ConnectWise\Clients\Sales\Spinen\ConnectWise\Clients\Sales\Model\OpportunityStageReference',
        'status' => '\Spinen\ConnectWise\Clients\Sales\Spinen\ConnectWise\Clients\Sales\Model\OpportunityStatusReference',
        'priority' => '\Spinen\ConnectWise\Clients\Sales\Spinen\ConnectWise\Clients\Sales\Model\OpportunityPriorityReference',
        'notes' => 'string',
        'probability' => '\Spinen\ConnectWise\Clients\Sales\Spinen\ConnectWise\Clients\Sales\Model\OpportunityProbabilityReference',
        'source' => 'string',
        'rating' => '\Spinen\ConnectWise\Clients\Sales\Spinen\ConnectWise\Clients\Sales\Model\OpportunityRatingReference',
        'campaign' => '\Spinen\ConnectWise\Clients\Sales\Spinen\ConnectWise\Clients\Sales\Model\CampaignReference',
        'primary_sales_rep' => '\Spinen\ConnectWise\Clients\Sales\Spinen\ConnectWise\Clients\Sales\Model\MemberReference',
        'secondary_sales_rep' => '\Spinen\ConnectWise\Clients\Sales\Spinen\ConnectWise\Clients\Sales\Model\MemberReference',
        'location_id' => 'int',
        'business_unit_id' => 'int',
        'company' => '\Spinen\ConnectWise\Clients\Sales\Spinen\ConnectWise\Clients\Sales\Model\CompanyReference',
        'contact' => '\Spinen\ConnectWise\Clients\Sales\Spinen\ConnectWise\Clients\Sales\Model\ContactReference',
        'site' => '\Spinen\ConnectWise\Clients\Sales\Spinen\ConnectWise\Clients\Sales\Model\SiteReference',
        'customer_po' => 'string',
        'pipeline_change_date' => '\DateTime',
        'date_became_lead' => '\DateTime',
        'closed_date' => '\DateTime',
        'closed_by' => '\Spinen\ConnectWise\Clients\Sales\Spinen\ConnectWise\Clients\Sales\Model\MemberReference',
        'total_sales_tax' => 'double',
        'ship_to_company' => '\Spinen\ConnectWise\Clients\Sales\Spinen\ConnectWise\Clients\Sales\Model\CompanyReference',
        'ship_to_contact' => '\Spinen\ConnectWise\Clients\Sales\Spinen\ConnectWise\Clients\Sales\Model\ContactReference',
        'ship_to_site' => '\Spinen\ConnectWise\Clients\Sales\Spinen\ConnectWise\Clients\Sales\Model\SiteReference',
        'bill_to_company' => '\Spinen\ConnectWise\Clients\Sales\Spinen\ConnectWise\Clients\Sales\Model\CompanyReference',
        'bill_to_contact' => '\Spinen\ConnectWise\Clients\Sales\Spinen\ConnectWise\Clients\Sales\Model\ContactReference',
        'bill_to_site' => '\Spinen\ConnectWise\Clients\Sales\Spinen\ConnectWise\Clients\Sales\Model\SiteReference',
        'billing_terms' => '\Spinen\ConnectWise\Clients\Sales\Spinen\ConnectWise\Clients\Sales\Model\BillingTermsReference',
        'tax_code' => '\Spinen\ConnectWise\Clients\Sales\Spinen\ConnectWise\Clients\Sales\Model\TaxCodeReference',
        '_info' => '\Spinen\ConnectWise\Clients\Sales\Spinen\ConnectWise\Clients\Sales\Model\Metadata',
        'custom_fields' => '\Spinen\ConnectWise\Clients\Sales\Spinen\ConnectWise\Clients\Sales\Model\CustomFieldValue[]'
    ];

    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of attributes where the key is the local name, and the value is the original name
     * @var string[]
     */
    protected static $attributeMap = [
        'id' => 'id',
        'name' => 'name',
        'expected_close_date' => 'expectedCloseDate',
        'type' => 'type',
        'stage' => 'stage',
        'status' => 'status',
        'priority' => 'priority',
        'notes' => 'notes',
        'probability' => 'probability',
        'source' => 'source',
        'rating' => 'rating',
        'campaign' => 'campaign',
        'primary_sales_rep' => 'primarySalesRep',
        'secondary_sales_rep' => 'secondarySalesRep',
        'location_id' => 'locationId',
        'business_unit_id' => 'businessUnitId',
        'company' => 'company',
        'contact' => 'contact',
        'site' => 'site',
        'customer_po' => 'customerPO',
        'pipeline_change_date' => 'pipelineChangeDate',
        'date_became_lead' => 'dateBecameLead',
        'closed_date' => 'closedDate',
        'closed_by' => 'closedBy',
        'total_sales_tax' => 'totalSalesTax',
        'ship_to_company' => 'shipToCompany',
        'ship_to_contact' => 'shipToContact',
        'ship_to_site' => 'shipToSite',
        'bill_to_company' => 'billToCompany',
        'bill_to_contact' => 'billToContact',
        'bill_to_site' => 'billToSite',
        'billing_terms' => 'billingTerms',
        'tax_code' => 'taxCode',
        '_info' => '_info',
        'custom_fields' => 'customFields'
    ];


    /**
     * Array of attributes to setter functions (for deserialization of responses)
     * @var string[]
     */
    protected static $setters = [
        'id' => 'setId',
        'name' => 'setName',
        'expected_close_date' => 'setExpectedCloseDate',
        'type' => 'setType',
        'stage' => 'setStage',
        'status' => 'setStatus',
        'priority' => 'setPriority',
        'notes' => 'setNotes',
        'probability' => 'setProbability',
        'source' => 'setSource',
        'rating' => 'setRating',
        'campaign' => 'setCampaign',
        'primary_sales_rep' => 'setPrimarySalesRep',
        'secondary_sales_rep' => 'setSecondarySalesRep',
        'location_id' => 'setLocationId',
        'business_unit_id' => 'setBusinessUnitId',
        'company' => 'setCompany',
        'contact' => 'setContact',
        'site' => 'setSite',
        'customer_po' => 'setCustomerPo',
        'pipeline_change_date' => 'setPipelineChangeDate',
        'date_became_lead' => 'setDateBecameLead',
        'closed_date' => 'setClosedDate',
        'closed_by' => 'setClosedBy',
        'total_sales_tax' => 'setTotalSalesTax',
        'ship_to_company' => 'setShipToCompany',
        'ship_to_contact' => 'setShipToContact',
        'ship_to_site' => 'setShipToSite',
        'bill_to_company' => 'setBillToCompany',
        'bill_to_contact' => 'setBillToContact',
        'bill_to_site' => 'setBillToSite',
        'billing_terms' => 'setBillingTerms',
        'tax_code' => 'setTaxCode',
        '_info' => 'setInfo',
        'custom_fields' => 'setCustomFields'
    ];


    /**
     * Array of attributes to getter functions (for serialization of requests)
     * @var string[]
     */
    protected static $getters = [
        'id' => 'getId',
        'name' => 'getName',
        'expected_close_date' => 'getExpectedCloseDate',
        'type' => 'getType',
        'stage' => 'getStage',
        'status' => 'getStatus',
        'priority' => 'getPriority',
        'notes' => 'getNotes',
        'probability' => 'getProbability',
        'source' => 'getSource',
        'rating' => 'getRating',
        'campaign' => 'getCampaign',
        'primary_sales_rep' => 'getPrimarySalesRep',
        'secondary_sales_rep' => 'getSecondarySalesRep',
        'location_id' => 'getLocationId',
        'business_unit_id' => 'getBusinessUnitId',
        'company' => 'getCompany',
        'contact' => 'getContact',
        'site' => 'getSite',
        'customer_po' => 'getCustomerPo',
        'pipeline_change_date' => 'getPipelineChangeDate',
        'date_became_lead' => 'getDateBecameLead',
        'closed_date' => 'getClosedDate',
        'closed_by' => 'getClosedBy',
        'total_sales_tax' => 'getTotalSalesTax',
        'ship_to_company' => 'getShipToCompany',
        'ship_to_contact' => 'getShipToContact',
        'ship_to_site' => 'getShipToSite',
        'bill_to_company' => 'getBillToCompany',
        'bill_to_contact' => 'getBillToContact',
        'bill_to_site' => 'getBillToSite',
        'billing_terms' => 'getBillingTerms',
        'tax_code' => 'getTaxCode',
        '_info' => 'getInfo',
        'custom_fields' => 'getCustomFields'
    ];

    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    public static function setters()
    {
        return self::$setters;
    }

    public static function getters()
    {
        return self::$getters;
    }

    

    

    /**
     * Associative array for storing property values
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     * @param mixed[] $data Associated array of property values initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['id'] = isset($data['id']) ? $data['id'] : null;
        $this->container['name'] = isset($data['name']) ? $data['name'] : null;
        $this->container['expected_close_date'] = isset($data['expected_close_date']) ? $data['expected_close_date'] : null;
        $this->container['type'] = isset($data['type']) ? $data['type'] : null;
        $this->container['stage'] = isset($data['stage']) ? $data['stage'] : null;
        $this->container['status'] = isset($data['status']) ? $data['status'] : null;
        $this->container['priority'] = isset($data['priority']) ? $data['priority'] : null;
        $this->container['notes'] = isset($data['notes']) ? $data['notes'] : null;
        $this->container['probability'] = isset($data['probability']) ? $data['probability'] : null;
        $this->container['source'] = isset($data['source']) ? $data['source'] : null;
        $this->container['rating'] = isset($data['rating']) ? $data['rating'] : null;
        $this->container['campaign'] = isset($data['campaign']) ? $data['campaign'] : null;
        $this->container['primary_sales_rep'] = isset($data['primary_sales_rep']) ? $data['primary_sales_rep'] : null;
        $this->container['secondary_sales_rep'] = isset($data['secondary_sales_rep']) ? $data['secondary_sales_rep'] : null;
        $this->container['location_id'] = isset($data['location_id']) ? $data['location_id'] : null;
        $this->container['business_unit_id'] = isset($data['business_unit_id']) ? $data['business_unit_id'] : null;
        $this->container['company'] = isset($data['company']) ? $data['company'] : null;
        $this->container['contact'] = isset($data['contact']) ? $data['contact'] : null;
        $this->container['site'] = isset($data['site']) ? $data['site'] : null;
        $this->container['customer_po'] = isset($data['customer_po']) ? $data['customer_po'] : null;
        $this->container['pipeline_change_date'] = isset($data['pipeline_change_date']) ? $data['pipeline_change_date'] : null;
        $this->container['date_became_lead'] = isset($data['date_became_lead']) ? $data['date_became_lead'] : null;
        $this->container['closed_date'] = isset($data['closed_date']) ? $data['closed_date'] : null;
        $this->container['closed_by'] = isset($data['closed_by']) ? $data['closed_by'] : null;
        $this->container['total_sales_tax'] = isset($data['total_sales_tax']) ? $data['total_sales_tax'] : null;
        $this->container['ship_to_company'] = isset($data['ship_to_company']) ? $data['ship_to_company'] : null;
        $this->container['ship_to_contact'] = isset($data['ship_to_contact']) ? $data['ship_to_contact'] : null;
        $this->container['ship_to_site'] = isset($data['ship_to_site']) ? $data['ship_to_site'] : null;
        $this->container['bill_to_company'] = isset($data['bill_to_company']) ? $data['bill_to_company'] : null;
        $this->container['bill_to_contact'] = isset($data['bill_to_contact']) ? $data['bill_to_contact'] : null;
        $this->container['bill_to_site'] = isset($data['bill_to_site']) ? $data['bill_to_site'] : null;
        $this->container['billing_terms'] = isset($data['billing_terms']) ? $data['billing_terms'] : null;
        $this->container['tax_code'] = isset($data['tax_code']) ? $data['tax_code'] : null;
        $this->container['_info'] = isset($data['_info']) ? $data['_info'] : null;
        $this->container['custom_fields'] = isset($data['custom_fields']) ? $data['custom_fields'] : null;
    }

    /**
     * show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalid_properties = [];
        if ($this->container['name'] === null) {
            $invalid_properties[] = "'name' can't be null";
        }
        if ((strlen($this->container['name']) > 100)) {
            $invalid_properties[] = "invalid value for 'name', the character length must be smaller than or equal to 100.";
        }

        if (!is_null($this->container['source']) && (strlen($this->container['source']) > 50)) {
            $invalid_properties[] = "invalid value for 'source', the character length must be smaller than or equal to 50.";
        }

        if ($this->container['primary_sales_rep'] === null) {
            $invalid_properties[] = "'primary_sales_rep' can't be null";
        }
        if ($this->container['company'] === null) {
            $invalid_properties[] = "'company' can't be null";
        }
        if ($this->container['contact'] === null) {
            $invalid_properties[] = "'contact' can't be null";
        }
        if ($this->container['site'] === null) {
            $invalid_properties[] = "'site' can't be null";
        }
        if (!is_null($this->container['customer_po']) && (strlen($this->container['customer_po']) > 25)) {
            $invalid_properties[] = "invalid value for 'customer_po', the character length must be smaller than or equal to 25.";
        }

        return $invalid_properties;
    }

    /**
     * validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properteis are valid
     */
    public function valid()
    {
        if ($this->container['name'] === null) {
            return false;
        }
        if (strlen($this->container['name']) > 100) {
            return false;
        }
        if (strlen($this->container['source']) > 50) {
            return false;
        }
        if ($this->container['primary_sales_rep'] === null) {
            return false;
        }
        if ($this->container['company'] === null) {
            return false;
        }
        if ($this->container['contact'] === null) {
            return false;
        }
        if ($this->container['site'] === null) {
            return false;
        }
        if (strlen($this->container['customer_po']) > 25) {
            return false;
        }
        return true;
    }


    /**
     * Gets id
     * @return int
     */
    public function getId()
    {
        return $this->container['id'];
    }

    /**
     * Sets id
     * @param int $id
     * @return $this
     */
    public function setId($id)
    {
        $this->container['id'] = $id;

        return $this;
    }

    /**
     * Gets name
     * @return string
     */
    public function getName()
    {
        return $this->container['name'];
    }

    /**
     * Sets name
     * @param string $name
     * @return $this
     */
    public function setName($name)
    {
        if ((strlen($name) > 100)) {
            throw new \InvalidArgumentException('invalid length for $name when calling Opportunity., must be smaller than or equal to 100.');
        }

        $this->container['name'] = $name;

        return $this;
    }

    /**
     * Gets expected_close_date
     * @return \DateTime
     */
    public function getExpectedCloseDate()
    {
        return $this->container['expected_close_date'];
    }

    /**
     * Sets expected_close_date
     * @param \DateTime $expected_close_date
     * @return $this
     */
    public function setExpectedCloseDate($expected_close_date)
    {
        $this->container['expected_close_date'] = $expected_close_date;

        return $this;
    }

    /**
     * Gets type
     * @return \Spinen\ConnectWise\Clients\Sales\Spinen\ConnectWise\Clients\Sales\Model\OpportunityTypeReference
     */
    public function getType()
    {
        return $this->container['type'];
    }

    /**
     * Sets type
     * @param \Spinen\ConnectWise\Clients\Sales\Spinen\ConnectWise\Clients\Sales\Model\OpportunityTypeReference $type
     * @return $this
     */
    public function setType($type)
    {
        $this->container['type'] = $type;

        return $this;
    }

    /**
     * Gets stage
     * @return \Spinen\ConnectWise\Clients\Sales\Spinen\ConnectWise\Clients\Sales\Model\OpportunityStageReference
     */
    public function getStage()
    {
        return $this->container['stage'];
    }

    /**
     * Sets stage
     * @param \Spinen\ConnectWise\Clients\Sales\Spinen\ConnectWise\Clients\Sales\Model\OpportunityStageReference $stage
     * @return $this
     */
    public function setStage($stage)
    {
        $this->container['stage'] = $stage;

        return $this;
    }

    /**
     * Gets status
     * @return \Spinen\ConnectWise\Clients\Sales\Spinen\ConnectWise\Clients\Sales\Model\OpportunityStatusReference
     */
    public function getStatus()
    {
        return $this->container['status'];
    }

    /**
     * Sets status
     * @param \Spinen\ConnectWise\Clients\Sales\Spinen\ConnectWise\Clients\Sales\Model\OpportunityStatusReference $status
     * @return $this
     */
    public function setStatus($status)
    {
        $this->container['status'] = $status;

        return $this;
    }

    /**
     * Gets priority
     * @return \Spinen\ConnectWise\Clients\Sales\Spinen\ConnectWise\Clients\Sales\Model\OpportunityPriorityReference
     */
    public function getPriority()
    {
        return $this->container['priority'];
    }

    /**
     * Sets priority
     * @param \Spinen\ConnectWise\Clients\Sales\Spinen\ConnectWise\Clients\Sales\Model\OpportunityPriorityReference $priority
     * @return $this
     */
    public function setPriority($priority)
    {
        $this->container['priority'] = $priority;

        return $this;
    }

    /**
     * Gets notes
     * @return string
     */
    public function getNotes()
    {
        return $this->container['notes'];
    }

    /**
     * Sets notes
     * @param string $notes
     * @return $this
     */
    public function setNotes($notes)
    {
        $this->container['notes'] = $notes;

        return $this;
    }

    /**
     * Gets probability
     * @return \Spinen\ConnectWise\Clients\Sales\Spinen\ConnectWise\Clients\Sales\Model\OpportunityProbabilityReference
     */
    public function getProbability()
    {
        return $this->container['probability'];
    }

    /**
     * Sets probability
     * @param \Spinen\ConnectWise\Clients\Sales\Spinen\ConnectWise\Clients\Sales\Model\OpportunityProbabilityReference $probability
     * @return $this
     */
    public function setProbability($probability)
    {
        $this->container['probability'] = $probability;

        return $this;
    }

    /**
     * Gets source
     * @return string
     */
    public function getSource()
    {
        return $this->container['source'];
    }

    /**
     * Sets source
     * @param string $source
     * @return $this
     */
    public function setSource($source)
    {
        if (!is_null($source) && (strlen($source) > 50)) {
            throw new \InvalidArgumentException('invalid length for $source when calling Opportunity., must be smaller than or equal to 50.');
        }

        $this->container['source'] = $source;

        return $this;
    }

    /**
     * Gets rating
     * @return \Spinen\ConnectWise\Clients\Sales\Spinen\ConnectWise\Clients\Sales\Model\OpportunityRatingReference
     */
    public function getRating()
    {
        return $this->container['rating'];
    }

    /**
     * Sets rating
     * @param \Spinen\ConnectWise\Clients\Sales\Spinen\ConnectWise\Clients\Sales\Model\OpportunityRatingReference $rating
     * @return $this
     */
    public function setRating($rating)
    {
        $this->container['rating'] = $rating;

        return $this;
    }

    /**
     * Gets campaign
     * @return \Spinen\ConnectWise\Clients\Sales\Spinen\ConnectWise\Clients\Sales\Model\CampaignReference
     */
    public function getCampaign()
    {
        return $this->container['campaign'];
    }

    /**
     * Sets campaign
     * @param \Spinen\ConnectWise\Clients\Sales\Spinen\ConnectWise\Clients\Sales\Model\CampaignReference $campaign
     * @return $this
     */
    public function setCampaign($campaign)
    {
        $this->container['campaign'] = $campaign;

        return $this;
    }

    /**
     * Gets primary_sales_rep
     * @return \Spinen\ConnectWise\Clients\Sales\Spinen\ConnectWise\Clients\Sales\Model\MemberReference
     */
    public function getPrimarySalesRep()
    {
        return $this->container['primary_sales_rep'];
    }

    /**
     * Sets primary_sales_rep
     * @param \Spinen\ConnectWise\Clients\Sales\Spinen\ConnectWise\Clients\Sales\Model\MemberReference $primary_sales_rep
     * @return $this
     */
    public function setPrimarySalesRep($primary_sales_rep)
    {
        $this->container['primary_sales_rep'] = $primary_sales_rep;

        return $this;
    }

    /**
     * Gets secondary_sales_rep
     * @return \Spinen\ConnectWise\Clients\Sales\Spinen\ConnectWise\Clients\Sales\Model\MemberReference
     */
    public function getSecondarySalesRep()
    {
        return $this->container['secondary_sales_rep'];
    }

    /**
     * Sets secondary_sales_rep
     * @param \Spinen\ConnectWise\Clients\Sales\Spinen\ConnectWise\Clients\Sales\Model\MemberReference $secondary_sales_rep
     * @return $this
     */
    public function setSecondarySalesRep($secondary_sales_rep)
    {
        $this->container['secondary_sales_rep'] = $secondary_sales_rep;

        return $this;
    }

    /**
     * Gets location_id
     * @return int
     */
    public function getLocationId()
    {
        return $this->container['location_id'];
    }

    /**
     * Sets location_id
     * @param int $location_id
     * @return $this
     */
    public function setLocationId($location_id)
    {
        $this->container['location_id'] = $location_id;

        return $this;
    }

    /**
     * Gets business_unit_id
     * @return int
     */
    public function getBusinessUnitId()
    {
        return $this->container['business_unit_id'];
    }

    /**
     * Sets business_unit_id
     * @param int $business_unit_id
     * @return $this
     */
    public function setBusinessUnitId($business_unit_id)
    {
        $this->container['business_unit_id'] = $business_unit_id;

        return $this;
    }

    /**
     * Gets company
     * @return \Spinen\ConnectWise\Clients\Sales\Spinen\ConnectWise\Clients\Sales\Model\CompanyReference
     */
    public function getCompany()
    {
        return $this->container['company'];
    }

    /**
     * Sets company
     * @param \Spinen\ConnectWise\Clients\Sales\Spinen\ConnectWise\Clients\Sales\Model\CompanyReference $company
     * @return $this
     */
    public function setCompany($company)
    {
        $this->container['company'] = $company;

        return $this;
    }

    /**
     * Gets contact
     * @return \Spinen\ConnectWise\Clients\Sales\Spinen\ConnectWise\Clients\Sales\Model\ContactReference
     */
    public function getContact()
    {
        return $this->container['contact'];
    }

    /**
     * Sets contact
     * @param \Spinen\ConnectWise\Clients\Sales\Spinen\ConnectWise\Clients\Sales\Model\ContactReference $contact
     * @return $this
     */
    public function setContact($contact)
    {
        $this->container['contact'] = $contact;

        return $this;
    }

    /**
     * Gets site
     * @return \Spinen\ConnectWise\Clients\Sales\Spinen\ConnectWise\Clients\Sales\Model\SiteReference
     */
    public function getSite()
    {
        return $this->container['site'];
    }

    /**
     * Sets site
     * @param \Spinen\ConnectWise\Clients\Sales\Spinen\ConnectWise\Clients\Sales\Model\SiteReference $site
     * @return $this
     */
    public function setSite($site)
    {
        $this->container['site'] = $site;

        return $this;
    }

    /**
     * Gets customer_po
     * @return string
     */
    public function getCustomerPo()
    {
        return $this->container['customer_po'];
    }

    /**
     * Sets customer_po
     * @param string $customer_po
     * @return $this
     */
    public function setCustomerPo($customer_po)
    {
        if (!is_null($customer_po) && (strlen($customer_po) > 25)) {
            throw new \InvalidArgumentException('invalid length for $customer_po when calling Opportunity., must be smaller than or equal to 25.');
        }

        $this->container['customer_po'] = $customer_po;

        return $this;
    }

    /**
     * Gets pipeline_change_date
     * @return \DateTime
     */
    public function getPipelineChangeDate()
    {
        return $this->container['pipeline_change_date'];
    }

    /**
     * Sets pipeline_change_date
     * @param \DateTime $pipeline_change_date
     * @return $this
     */
    public function setPipelineChangeDate($pipeline_change_date)
    {
        $this->container['pipeline_change_date'] = $pipeline_change_date;

        return $this;
    }

    /**
     * Gets date_became_lead
     * @return \DateTime
     */
    public function getDateBecameLead()
    {
        return $this->container['date_became_lead'];
    }

    /**
     * Sets date_became_lead
     * @param \DateTime $date_became_lead
     * @return $this
     */
    public function setDateBecameLead($date_became_lead)
    {
        $this->container['date_became_lead'] = $date_became_lead;

        return $this;
    }

    /**
     * Gets closed_date
     * @return \DateTime
     */
    public function getClosedDate()
    {
        return $this->container['closed_date'];
    }

    /**
     * Sets closed_date
     * @param \DateTime $closed_date
     * @return $this
     */
    public function setClosedDate($closed_date)
    {
        $this->container['closed_date'] = $closed_date;

        return $this;
    }

    /**
     * Gets closed_by
     * @return \Spinen\ConnectWise\Clients\Sales\Spinen\ConnectWise\Clients\Sales\Model\MemberReference
     */
    public function getClosedBy()
    {
        return $this->container['closed_by'];
    }

    /**
     * Sets closed_by
     * @param \Spinen\ConnectWise\Clients\Sales\Spinen\ConnectWise\Clients\Sales\Model\MemberReference $closed_by
     * @return $this
     */
    public function setClosedBy($closed_by)
    {
        $this->container['closed_by'] = $closed_by;

        return $this;
    }

    /**
     * Gets total_sales_tax
     * @return double
     */
    public function getTotalSalesTax()
    {
        return $this->container['total_sales_tax'];
    }

    /**
     * Sets total_sales_tax
     * @param double $total_sales_tax
     * @return $this
     */
    public function setTotalSalesTax($total_sales_tax)
    {
        $this->container['total_sales_tax'] = $total_sales_tax;

        return $this;
    }

    /**
     * Gets ship_to_company
     * @return \Spinen\ConnectWise\Clients\Sales\Spinen\ConnectWise\Clients\Sales\Model\CompanyReference
     */
    public function getShipToCompany()
    {
        return $this->container['ship_to_company'];
    }

    /**
     * Sets ship_to_company
     * @param \Spinen\ConnectWise\Clients\Sales\Spinen\ConnectWise\Clients\Sales\Model\CompanyReference $ship_to_company
     * @return $this
     */
    public function setShipToCompany($ship_to_company)
    {
        $this->container['ship_to_company'] = $ship_to_company;

        return $this;
    }

    /**
     * Gets ship_to_contact
     * @return \Spinen\ConnectWise\Clients\Sales\Spinen\ConnectWise\Clients\Sales\Model\ContactReference
     */
    public function getShipToContact()
    {
        return $this->container['ship_to_contact'];
    }

    /**
     * Sets ship_to_contact
     * @param \Spinen\ConnectWise\Clients\Sales\Spinen\ConnectWise\Clients\Sales\Model\ContactReference $ship_to_contact
     * @return $this
     */
    public function setShipToContact($ship_to_contact)
    {
        $this->container['ship_to_contact'] = $ship_to_contact;

        return $this;
    }

    /**
     * Gets ship_to_site
     * @return \Spinen\ConnectWise\Clients\Sales\Spinen\ConnectWise\Clients\Sales\Model\SiteReference
     */
    public function getShipToSite()
    {
        return $this->container['ship_to_site'];
    }

    /**
     * Sets ship_to_site
     * @param \Spinen\ConnectWise\Clients\Sales\Spinen\ConnectWise\Clients\Sales\Model\SiteReference $ship_to_site
     * @return $this
     */
    public function setShipToSite($ship_to_site)
    {
        $this->container['ship_to_site'] = $ship_to_site;

        return $this;
    }

    /**
     * Gets bill_to_company
     * @return \Spinen\ConnectWise\Clients\Sales\Spinen\ConnectWise\Clients\Sales\Model\CompanyReference
     */
    public function getBillToCompany()
    {
        return $this->container['bill_to_company'];
    }

    /**
     * Sets bill_to_company
     * @param \Spinen\ConnectWise\Clients\Sales\Spinen\ConnectWise\Clients\Sales\Model\CompanyReference $bill_to_company
     * @return $this
     */
    public function setBillToCompany($bill_to_company)
    {
        $this->container['bill_to_company'] = $bill_to_company;

        return $this;
    }

    /**
     * Gets bill_to_contact
     * @return \Spinen\ConnectWise\Clients\Sales\Spinen\ConnectWise\Clients\Sales\Model\ContactReference
     */
    public function getBillToContact()
    {
        return $this->container['bill_to_contact'];
    }

    /**
     * Sets bill_to_contact
     * @param \Spinen\ConnectWise\Clients\Sales\Spinen\ConnectWise\Clients\Sales\Model\ContactReference $bill_to_contact
     * @return $this
     */
    public function setBillToContact($bill_to_contact)
    {
        $this->container['bill_to_contact'] = $bill_to_contact;

        return $this;
    }

    /**
     * Gets bill_to_site
     * @return \Spinen\ConnectWise\Clients\Sales\Spinen\ConnectWise\Clients\Sales\Model\SiteReference
     */
    public function getBillToSite()
    {
        return $this->container['bill_to_site'];
    }

    /**
     * Sets bill_to_site
     * @param \Spinen\ConnectWise\Clients\Sales\Spinen\ConnectWise\Clients\Sales\Model\SiteReference $bill_to_site
     * @return $this
     */
    public function setBillToSite($bill_to_site)
    {
        $this->container['bill_to_site'] = $bill_to_site;

        return $this;
    }

    /**
     * Gets billing_terms
     * @return \Spinen\ConnectWise\Clients\Sales\Spinen\ConnectWise\Clients\Sales\Model\BillingTermsReference
     */
    public function getBillingTerms()
    {
        return $this->container['billing_terms'];
    }

    /**
     * Sets billing_terms
     * @param \Spinen\ConnectWise\Clients\Sales\Spinen\ConnectWise\Clients\Sales\Model\BillingTermsReference $billing_terms
     * @return $this
     */
    public function setBillingTerms($billing_terms)
    {
        $this->container['billing_terms'] = $billing_terms;

        return $this;
    }

    /**
     * Gets tax_code
     * @return \Spinen\ConnectWise\Clients\Sales\Spinen\ConnectWise\Clients\Sales\Model\TaxCodeReference
     */
    public function getTaxCode()
    {
        return $this->container['tax_code'];
    }

    /**
     * Sets tax_code
     * @param \Spinen\ConnectWise\Clients\Sales\Spinen\ConnectWise\Clients\Sales\Model\TaxCodeReference $tax_code
     * @return $this
     */
    public function setTaxCode($tax_code)
    {
        $this->container['tax_code'] = $tax_code;

        return $this;
    }

    /**
     * Gets _info
     * @return \Spinen\ConnectWise\Clients\Sales\Spinen\ConnectWise\Clients\Sales\Model\Metadata
     */
    public function getInfo()
    {
        return $this->container['_info'];
    }

    /**
     * Sets _info
     * @param \Spinen\ConnectWise\Clients\Sales\Spinen\ConnectWise\Clients\Sales\Model\Metadata $_info Metadata of the entity
     * @return $this
     */
    public function setInfo($_info)
    {
        $this->container['_info'] = $_info;

        return $this;
    }

    /**
     * Gets custom_fields
     * @return \Spinen\ConnectWise\Clients\Sales\Spinen\ConnectWise\Clients\Sales\Model\CustomFieldValue[]
     */
    public function getCustomFields()
    {
        return $this->container['custom_fields'];
    }

    /**
     * Sets custom_fields
     * @param \Spinen\ConnectWise\Clients\Sales\Spinen\ConnectWise\Clients\Sales\Model\CustomFieldValue[] $custom_fields
     * @return $this
     */
    public function setCustomFields($custom_fields)
    {
        $this->container['custom_fields'] = $custom_fields;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     * @param  integer $offset Offset
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     * @param  integer $offset Offset
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     * @param  integer $offset Offset
     * @param  mixed   $value  Value to be set
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     * @param  integer $offset Offset
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(\Spinen\ConnectWise\Clients\Sales\ObjectSerializer::sanitizeForSerialization($this), JSON_PRETTY_PRINT);
        }

        return json_encode(\Spinen\ConnectWise\Clients\Sales\ObjectSerializer::sanitizeForSerialization($this));
    }
}


