<?php
/**
 * Order
 *
 * PHP version 5
 *
 * @category Class
 * @package  Spinen\ConnectWise\Clients\Sales
 * @author   Swaagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Sales API
 *
 * ConnectWise Sales API
 *
 * OpenAPI spec version: 1.0.0
 * Contact: platform@connectwise.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 *
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Spinen\ConnectWise\Clients\Sales\Model;

use \ArrayAccess;

/**
 * Order Class Doc Comment
 *
 * @category    Class */
/**
 * @package     Spinen\ConnectWise\Clients\Sales
 * @author      Swagger Codegen team
 * @link        https://github.com/swagger-api/swagger-codegen
 */
class Order implements ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      * @var string
      */
    protected static $swaggerModelName = 'Order';

    /**
      * Array of property to type mappings. Used for (de)serialization
      * @var string[]
      */
    protected static $swaggerTypes = [
        'id' => 'int',
        'company' => '\Spinen\ConnectWise\Clients\Sales\Model\CompanyReference',
        'contact' => '\Spinen\ConnectWise\Clients\Sales\Model\ContactReference',
        'phone' => 'string',
        'phone_ext' => 'string',
        'email' => 'string',
        'site' => '\Spinen\ConnectWise\Clients\Sales\Model\SiteReference',
        'status' => '\Spinen\ConnectWise\Clients\Sales\Model\OrderStatusReference',
        'opportunity' => '\Spinen\ConnectWise\Clients\Sales\Model\OpportunityReference',
        'order_date' => '\DateTime',
        'due_date' => '\DateTime',
        'billing_terms' => '\Spinen\ConnectWise\Clients\Sales\Model\BillingTermsReference',
        'tax_code' => '\Spinen\ConnectWise\Clients\Sales\Model\TaxCodeReference',
        'po_number' => 'string',
        'location_id' => 'int',
        'business_unit_id' => 'int',
        'sales_rep' => '\Spinen\ConnectWise\Clients\Sales\Model\MemberReference',
        'notes' => 'string',
        'bill_closed_flag' => 'bool',
        'bill_shipped_flag' => 'bool',
        'restrict_downpayment_flag' => 'bool',
        'description' => 'string',
        'top_comment_flag' => 'bool',
        'bottom_comment_flag' => 'bool',
        'ship_to_company' => '\Spinen\ConnectWise\Clients\Sales\Model\CompanyReference',
        'ship_to_contact' => '\Spinen\ConnectWise\Clients\Sales\Model\ContactReference',
        'ship_to_site' => '\Spinen\ConnectWise\Clients\Sales\Model\SiteReference',
        'bill_to_company' => '\Spinen\ConnectWise\Clients\Sales\Model\CompanyReference',
        'bill_to_contact' => '\Spinen\ConnectWise\Clients\Sales\Model\ContactReference',
        'bill_to_site' => '\Spinen\ConnectWise\Clients\Sales\Model\SiteReference',
        'product_ids' => 'int[]',
        'document_ids' => 'int[]',
        'invoice_ids' => 'int[]',
        'config_ids' => 'int[]',
        'total' => 'double',
        'tax_total' => 'double',
        '_info' => '\Spinen\ConnectWise\Clients\Sales\Model\Metadata'
    ];

    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of attributes where the key is the local name, and the value is the original name
     * @var string[]
     */
    protected static $attributeMap = [
        'id' => 'id',
        'company' => 'company',
        'contact' => 'contact',
        'phone' => 'phone',
        'phone_ext' => 'phoneExt',
        'email' => 'email',
        'site' => 'site',
        'status' => 'status',
        'opportunity' => 'opportunity',
        'order_date' => 'orderDate',
        'due_date' => 'dueDate',
        'billing_terms' => 'billingTerms',
        'tax_code' => 'taxCode',
        'po_number' => 'poNumber',
        'location_id' => 'locationId',
        'business_unit_id' => 'businessUnitId',
        'sales_rep' => 'salesRep',
        'notes' => 'notes',
        'bill_closed_flag' => 'billClosedFlag',
        'bill_shipped_flag' => 'billShippedFlag',
        'restrict_downpayment_flag' => 'restrictDownpaymentFlag',
        'description' => 'description',
        'top_comment_flag' => 'topCommentFlag',
        'bottom_comment_flag' => 'bottomCommentFlag',
        'ship_to_company' => 'shipToCompany',
        'ship_to_contact' => 'shipToContact',
        'ship_to_site' => 'shipToSite',
        'bill_to_company' => 'billToCompany',
        'bill_to_contact' => 'billToContact',
        'bill_to_site' => 'billToSite',
        'product_ids' => 'productIds',
        'document_ids' => 'documentIds',
        'invoice_ids' => 'invoiceIds',
        'config_ids' => 'configIds',
        'total' => 'total',
        'tax_total' => 'taxTotal',
        '_info' => '_info'
    ];


    /**
     * Array of attributes to setter functions (for deserialization of responses)
     * @var string[]
     */
    protected static $setters = [
        'id' => 'setId',
        'company' => 'setCompany',
        'contact' => 'setContact',
        'phone' => 'setPhone',
        'phone_ext' => 'setPhoneExt',
        'email' => 'setEmail',
        'site' => 'setSite',
        'status' => 'setStatus',
        'opportunity' => 'setOpportunity',
        'order_date' => 'setOrderDate',
        'due_date' => 'setDueDate',
        'billing_terms' => 'setBillingTerms',
        'tax_code' => 'setTaxCode',
        'po_number' => 'setPoNumber',
        'location_id' => 'setLocationId',
        'business_unit_id' => 'setBusinessUnitId',
        'sales_rep' => 'setSalesRep',
        'notes' => 'setNotes',
        'bill_closed_flag' => 'setBillClosedFlag',
        'bill_shipped_flag' => 'setBillShippedFlag',
        'restrict_downpayment_flag' => 'setRestrictDownpaymentFlag',
        'description' => 'setDescription',
        'top_comment_flag' => 'setTopCommentFlag',
        'bottom_comment_flag' => 'setBottomCommentFlag',
        'ship_to_company' => 'setShipToCompany',
        'ship_to_contact' => 'setShipToContact',
        'ship_to_site' => 'setShipToSite',
        'bill_to_company' => 'setBillToCompany',
        'bill_to_contact' => 'setBillToContact',
        'bill_to_site' => 'setBillToSite',
        'product_ids' => 'setProductIds',
        'document_ids' => 'setDocumentIds',
        'invoice_ids' => 'setInvoiceIds',
        'config_ids' => 'setConfigIds',
        'total' => 'setTotal',
        'tax_total' => 'setTaxTotal',
        '_info' => 'setInfo'
    ];


    /**
     * Array of attributes to getter functions (for serialization of requests)
     * @var string[]
     */
    protected static $getters = [
        'id' => 'getId',
        'company' => 'getCompany',
        'contact' => 'getContact',
        'phone' => 'getPhone',
        'phone_ext' => 'getPhoneExt',
        'email' => 'getEmail',
        'site' => 'getSite',
        'status' => 'getStatus',
        'opportunity' => 'getOpportunity',
        'order_date' => 'getOrderDate',
        'due_date' => 'getDueDate',
        'billing_terms' => 'getBillingTerms',
        'tax_code' => 'getTaxCode',
        'po_number' => 'getPoNumber',
        'location_id' => 'getLocationId',
        'business_unit_id' => 'getBusinessUnitId',
        'sales_rep' => 'getSalesRep',
        'notes' => 'getNotes',
        'bill_closed_flag' => 'getBillClosedFlag',
        'bill_shipped_flag' => 'getBillShippedFlag',
        'restrict_downpayment_flag' => 'getRestrictDownpaymentFlag',
        'description' => 'getDescription',
        'top_comment_flag' => 'getTopCommentFlag',
        'bottom_comment_flag' => 'getBottomCommentFlag',
        'ship_to_company' => 'getShipToCompany',
        'ship_to_contact' => 'getShipToContact',
        'ship_to_site' => 'getShipToSite',
        'bill_to_company' => 'getBillToCompany',
        'bill_to_contact' => 'getBillToContact',
        'bill_to_site' => 'getBillToSite',
        'product_ids' => 'getProductIds',
        'document_ids' => 'getDocumentIds',
        'invoice_ids' => 'getInvoiceIds',
        'config_ids' => 'getConfigIds',
        'total' => 'getTotal',
        'tax_total' => 'getTaxTotal',
        '_info' => 'getInfo'
    ];

    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    public static function setters()
    {
        return self::$setters;
    }

    public static function getters()
    {
        return self::$getters;
    }

    

    

    /**
     * Associative array for storing property values
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     * @param mixed[] $data Associated array of property values initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['id'] = isset($data['id']) ? $data['id'] : null;
        $this->container['company'] = isset($data['company']) ? $data['company'] : null;
        $this->container['contact'] = isset($data['contact']) ? $data['contact'] : null;
        $this->container['phone'] = isset($data['phone']) ? $data['phone'] : null;
        $this->container['phone_ext'] = isset($data['phone_ext']) ? $data['phone_ext'] : null;
        $this->container['email'] = isset($data['email']) ? $data['email'] : null;
        $this->container['site'] = isset($data['site']) ? $data['site'] : null;
        $this->container['status'] = isset($data['status']) ? $data['status'] : null;
        $this->container['opportunity'] = isset($data['opportunity']) ? $data['opportunity'] : null;
        $this->container['order_date'] = isset($data['order_date']) ? $data['order_date'] : null;
        $this->container['due_date'] = isset($data['due_date']) ? $data['due_date'] : null;
        $this->container['billing_terms'] = isset($data['billing_terms']) ? $data['billing_terms'] : null;
        $this->container['tax_code'] = isset($data['tax_code']) ? $data['tax_code'] : null;
        $this->container['po_number'] = isset($data['po_number']) ? $data['po_number'] : null;
        $this->container['location_id'] = isset($data['location_id']) ? $data['location_id'] : null;
        $this->container['business_unit_id'] = isset($data['business_unit_id']) ? $data['business_unit_id'] : null;
        $this->container['sales_rep'] = isset($data['sales_rep']) ? $data['sales_rep'] : null;
        $this->container['notes'] = isset($data['notes']) ? $data['notes'] : null;
        $this->container['bill_closed_flag'] = isset($data['bill_closed_flag']) ? $data['bill_closed_flag'] : null;
        $this->container['bill_shipped_flag'] = isset($data['bill_shipped_flag']) ? $data['bill_shipped_flag'] : null;
        $this->container['restrict_downpayment_flag'] = isset($data['restrict_downpayment_flag']) ? $data['restrict_downpayment_flag'] : null;
        $this->container['description'] = isset($data['description']) ? $data['description'] : null;
        $this->container['top_comment_flag'] = isset($data['top_comment_flag']) ? $data['top_comment_flag'] : null;
        $this->container['bottom_comment_flag'] = isset($data['bottom_comment_flag']) ? $data['bottom_comment_flag'] : null;
        $this->container['ship_to_company'] = isset($data['ship_to_company']) ? $data['ship_to_company'] : null;
        $this->container['ship_to_contact'] = isset($data['ship_to_contact']) ? $data['ship_to_contact'] : null;
        $this->container['ship_to_site'] = isset($data['ship_to_site']) ? $data['ship_to_site'] : null;
        $this->container['bill_to_company'] = isset($data['bill_to_company']) ? $data['bill_to_company'] : null;
        $this->container['bill_to_contact'] = isset($data['bill_to_contact']) ? $data['bill_to_contact'] : null;
        $this->container['bill_to_site'] = isset($data['bill_to_site']) ? $data['bill_to_site'] : null;
        $this->container['product_ids'] = isset($data['product_ids']) ? $data['product_ids'] : null;
        $this->container['document_ids'] = isset($data['document_ids']) ? $data['document_ids'] : null;
        $this->container['invoice_ids'] = isset($data['invoice_ids']) ? $data['invoice_ids'] : null;
        $this->container['config_ids'] = isset($data['config_ids']) ? $data['config_ids'] : null;
        $this->container['total'] = isset($data['total']) ? $data['total'] : null;
        $this->container['tax_total'] = isset($data['tax_total']) ? $data['tax_total'] : null;
        $this->container['_info'] = isset($data['_info']) ? $data['_info'] : null;
    }

    /**
     * show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalid_properties = [];
        if ($this->container['company'] === null) {
            $invalid_properties[] = "'company' can't be null";
        }
        if ($this->container['status'] === null) {
            $invalid_properties[] = "'status' can't be null";
        }
        if (!is_null($this->container['po_number']) && (strlen($this->container['po_number']) > 50)) {
            $invalid_properties[] = "invalid value for 'po_number', the character length must be smaller than or equal to 50.";
        }

        if ($this->container['sales_rep'] === null) {
            $invalid_properties[] = "'sales_rep' can't be null";
        }
        return $invalid_properties;
    }

    /**
     * validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properteis are valid
     */
    public function valid()
    {
        if ($this->container['company'] === null) {
            return false;
        }
        if ($this->container['status'] === null) {
            return false;
        }
        if (strlen($this->container['po_number']) > 50) {
            return false;
        }
        if ($this->container['sales_rep'] === null) {
            return false;
        }
        return true;
    }


    /**
     * Gets id
     * @return int
     */
    public function getId()
    {
        return $this->container['id'];
    }

    /**
     * Sets id
     * @param int $id
     * @return $this
     */
    public function setId($id)
    {
        $this->container['id'] = $id;

        return $this;
    }

    /**
     * Gets company
     * @return \Spinen\ConnectWise\Clients\Sales\Model\CompanyReference
     */
    public function getCompany()
    {
        return $this->container['company'];
    }

    /**
     * Sets company
     * @param \Spinen\ConnectWise\Clients\Sales\Model\CompanyReference $company
     * @return $this
     */
    public function setCompany($company)
    {
        $this->container['company'] = $company;

        return $this;
    }

    /**
     * Gets contact
     * @return \Spinen\ConnectWise\Clients\Sales\Model\ContactReference
     */
    public function getContact()
    {
        return $this->container['contact'];
    }

    /**
     * Sets contact
     * @param \Spinen\ConnectWise\Clients\Sales\Model\ContactReference $contact
     * @return $this
     */
    public function setContact($contact)
    {
        $this->container['contact'] = $contact;

        return $this;
    }

    /**
     * Gets phone
     * @return string
     */
    public function getPhone()
    {
        return $this->container['phone'];
    }

    /**
     * Sets phone
     * @param string $phone
     * @return $this
     */
    public function setPhone($phone)
    {
        $this->container['phone'] = $phone;

        return $this;
    }

    /**
     * Gets phone_ext
     * @return string
     */
    public function getPhoneExt()
    {
        return $this->container['phone_ext'];
    }

    /**
     * Sets phone_ext
     * @param string $phone_ext
     * @return $this
     */
    public function setPhoneExt($phone_ext)
    {
        $this->container['phone_ext'] = $phone_ext;

        return $this;
    }

    /**
     * Gets email
     * @return string
     */
    public function getEmail()
    {
        return $this->container['email'];
    }

    /**
     * Sets email
     * @param string $email
     * @return $this
     */
    public function setEmail($email)
    {
        $this->container['email'] = $email;

        return $this;
    }

    /**
     * Gets site
     * @return \Spinen\ConnectWise\Clients\Sales\Model\SiteReference
     */
    public function getSite()
    {
        return $this->container['site'];
    }

    /**
     * Sets site
     * @param \Spinen\ConnectWise\Clients\Sales\Model\SiteReference $site
     * @return $this
     */
    public function setSite($site)
    {
        $this->container['site'] = $site;

        return $this;
    }

    /**
     * Gets status
     * @return \Spinen\ConnectWise\Clients\Sales\Model\OrderStatusReference
     */
    public function getStatus()
    {
        return $this->container['status'];
    }

    /**
     * Sets status
     * @param \Spinen\ConnectWise\Clients\Sales\Model\OrderStatusReference $status
     * @return $this
     */
    public function setStatus($status)
    {
        $this->container['status'] = $status;

        return $this;
    }

    /**
     * Gets opportunity
     * @return \Spinen\ConnectWise\Clients\Sales\Model\OpportunityReference
     */
    public function getOpportunity()
    {
        return $this->container['opportunity'];
    }

    /**
     * Sets opportunity
     * @param \Spinen\ConnectWise\Clients\Sales\Model\OpportunityReference $opportunity
     * @return $this
     */
    public function setOpportunity($opportunity)
    {
        $this->container['opportunity'] = $opportunity;

        return $this;
    }

    /**
     * Gets order_date
     * @return \DateTime
     */
    public function getOrderDate()
    {
        return $this->container['order_date'];
    }

    /**
     * Sets order_date
     * @param \DateTime $order_date
     * @return $this
     */
    public function setOrderDate($order_date)
    {
        $this->container['order_date'] = $order_date;

        return $this;
    }

    /**
     * Gets due_date
     * @return \DateTime
     */
    public function getDueDate()
    {
        return $this->container['due_date'];
    }

    /**
     * Sets due_date
     * @param \DateTime $due_date
     * @return $this
     */
    public function setDueDate($due_date)
    {
        $this->container['due_date'] = $due_date;

        return $this;
    }

    /**
     * Gets billing_terms
     * @return \Spinen\ConnectWise\Clients\Sales\Model\BillingTermsReference
     */
    public function getBillingTerms()
    {
        return $this->container['billing_terms'];
    }

    /**
     * Sets billing_terms
     * @param \Spinen\ConnectWise\Clients\Sales\Model\BillingTermsReference $billing_terms
     * @return $this
     */
    public function setBillingTerms($billing_terms)
    {
        $this->container['billing_terms'] = $billing_terms;

        return $this;
    }

    /**
     * Gets tax_code
     * @return \Spinen\ConnectWise\Clients\Sales\Model\TaxCodeReference
     */
    public function getTaxCode()
    {
        return $this->container['tax_code'];
    }

    /**
     * Sets tax_code
     * @param \Spinen\ConnectWise\Clients\Sales\Model\TaxCodeReference $tax_code
     * @return $this
     */
    public function setTaxCode($tax_code)
    {
        $this->container['tax_code'] = $tax_code;

        return $this;
    }

    /**
     * Gets po_number
     * @return string
     */
    public function getPoNumber()
    {
        return $this->container['po_number'];
    }

    /**
     * Sets po_number
     * @param string $po_number
     * @return $this
     */
    public function setPoNumber($po_number)
    {
        if (!is_null($po_number) && (strlen($po_number) > 50)) {
            throw new \InvalidArgumentException('invalid length for $po_number when calling Order., must be smaller than or equal to 50.');
        }

        $this->container['po_number'] = $po_number;

        return $this;
    }

    /**
     * Gets location_id
     * @return int
     */
    public function getLocationId()
    {
        return $this->container['location_id'];
    }

    /**
     * Sets location_id
     * @param int $location_id
     * @return $this
     */
    public function setLocationId($location_id)
    {
        $this->container['location_id'] = $location_id;

        return $this;
    }

    /**
     * Gets business_unit_id
     * @return int
     */
    public function getBusinessUnitId()
    {
        return $this->container['business_unit_id'];
    }

    /**
     * Sets business_unit_id
     * @param int $business_unit_id
     * @return $this
     */
    public function setBusinessUnitId($business_unit_id)
    {
        $this->container['business_unit_id'] = $business_unit_id;

        return $this;
    }

    /**
     * Gets sales_rep
     * @return \Spinen\ConnectWise\Clients\Sales\Model\MemberReference
     */
    public function getSalesRep()
    {
        return $this->container['sales_rep'];
    }

    /**
     * Sets sales_rep
     * @param \Spinen\ConnectWise\Clients\Sales\Model\MemberReference $sales_rep
     * @return $this
     */
    public function setSalesRep($sales_rep)
    {
        $this->container['sales_rep'] = $sales_rep;

        return $this;
    }

    /**
     * Gets notes
     * @return string
     */
    public function getNotes()
    {
        return $this->container['notes'];
    }

    /**
     * Sets notes
     * @param string $notes
     * @return $this
     */
    public function setNotes($notes)
    {
        $this->container['notes'] = $notes;

        return $this;
    }

    /**
     * Gets bill_closed_flag
     * @return bool
     */
    public function getBillClosedFlag()
    {
        return $this->container['bill_closed_flag'];
    }

    /**
     * Sets bill_closed_flag
     * @param bool $bill_closed_flag
     * @return $this
     */
    public function setBillClosedFlag($bill_closed_flag)
    {
        $this->container['bill_closed_flag'] = $bill_closed_flag;

        return $this;
    }

    /**
     * Gets bill_shipped_flag
     * @return bool
     */
    public function getBillShippedFlag()
    {
        return $this->container['bill_shipped_flag'];
    }

    /**
     * Sets bill_shipped_flag
     * @param bool $bill_shipped_flag
     * @return $this
     */
    public function setBillShippedFlag($bill_shipped_flag)
    {
        $this->container['bill_shipped_flag'] = $bill_shipped_flag;

        return $this;
    }

    /**
     * Gets restrict_downpayment_flag
     * @return bool
     */
    public function getRestrictDownpaymentFlag()
    {
        return $this->container['restrict_downpayment_flag'];
    }

    /**
     * Sets restrict_downpayment_flag
     * @param bool $restrict_downpayment_flag
     * @return $this
     */
    public function setRestrictDownpaymentFlag($restrict_downpayment_flag)
    {
        $this->container['restrict_downpayment_flag'] = $restrict_downpayment_flag;

        return $this;
    }

    /**
     * Gets description
     * @return string
     */
    public function getDescription()
    {
        return $this->container['description'];
    }

    /**
     * Sets description
     * @param string $description
     * @return $this
     */
    public function setDescription($description)
    {
        $this->container['description'] = $description;

        return $this;
    }

    /**
     * Gets top_comment_flag
     * @return bool
     */
    public function getTopCommentFlag()
    {
        return $this->container['top_comment_flag'];
    }

    /**
     * Sets top_comment_flag
     * @param bool $top_comment_flag
     * @return $this
     */
    public function setTopCommentFlag($top_comment_flag)
    {
        $this->container['top_comment_flag'] = $top_comment_flag;

        return $this;
    }

    /**
     * Gets bottom_comment_flag
     * @return bool
     */
    public function getBottomCommentFlag()
    {
        return $this->container['bottom_comment_flag'];
    }

    /**
     * Sets bottom_comment_flag
     * @param bool $bottom_comment_flag
     * @return $this
     */
    public function setBottomCommentFlag($bottom_comment_flag)
    {
        $this->container['bottom_comment_flag'] = $bottom_comment_flag;

        return $this;
    }

    /**
     * Gets ship_to_company
     * @return \Spinen\ConnectWise\Clients\Sales\Model\CompanyReference
     */
    public function getShipToCompany()
    {
        return $this->container['ship_to_company'];
    }

    /**
     * Sets ship_to_company
     * @param \Spinen\ConnectWise\Clients\Sales\Model\CompanyReference $ship_to_company
     * @return $this
     */
    public function setShipToCompany($ship_to_company)
    {
        $this->container['ship_to_company'] = $ship_to_company;

        return $this;
    }

    /**
     * Gets ship_to_contact
     * @return \Spinen\ConnectWise\Clients\Sales\Model\ContactReference
     */
    public function getShipToContact()
    {
        return $this->container['ship_to_contact'];
    }

    /**
     * Sets ship_to_contact
     * @param \Spinen\ConnectWise\Clients\Sales\Model\ContactReference $ship_to_contact
     * @return $this
     */
    public function setShipToContact($ship_to_contact)
    {
        $this->container['ship_to_contact'] = $ship_to_contact;

        return $this;
    }

    /**
     * Gets ship_to_site
     * @return \Spinen\ConnectWise\Clients\Sales\Model\SiteReference
     */
    public function getShipToSite()
    {
        return $this->container['ship_to_site'];
    }

    /**
     * Sets ship_to_site
     * @param \Spinen\ConnectWise\Clients\Sales\Model\SiteReference $ship_to_site
     * @return $this
     */
    public function setShipToSite($ship_to_site)
    {
        $this->container['ship_to_site'] = $ship_to_site;

        return $this;
    }

    /**
     * Gets bill_to_company
     * @return \Spinen\ConnectWise\Clients\Sales\Model\CompanyReference
     */
    public function getBillToCompany()
    {
        return $this->container['bill_to_company'];
    }

    /**
     * Sets bill_to_company
     * @param \Spinen\ConnectWise\Clients\Sales\Model\CompanyReference $bill_to_company
     * @return $this
     */
    public function setBillToCompany($bill_to_company)
    {
        $this->container['bill_to_company'] = $bill_to_company;

        return $this;
    }

    /**
     * Gets bill_to_contact
     * @return \Spinen\ConnectWise\Clients\Sales\Model\ContactReference
     */
    public function getBillToContact()
    {
        return $this->container['bill_to_contact'];
    }

    /**
     * Sets bill_to_contact
     * @param \Spinen\ConnectWise\Clients\Sales\Model\ContactReference $bill_to_contact
     * @return $this
     */
    public function setBillToContact($bill_to_contact)
    {
        $this->container['bill_to_contact'] = $bill_to_contact;

        return $this;
    }

    /**
     * Gets bill_to_site
     * @return \Spinen\ConnectWise\Clients\Sales\Model\SiteReference
     */
    public function getBillToSite()
    {
        return $this->container['bill_to_site'];
    }

    /**
     * Sets bill_to_site
     * @param \Spinen\ConnectWise\Clients\Sales\Model\SiteReference $bill_to_site
     * @return $this
     */
    public function setBillToSite($bill_to_site)
    {
        $this->container['bill_to_site'] = $bill_to_site;

        return $this;
    }

    /**
     * Gets product_ids
     * @return int[]
     */
    public function getProductIds()
    {
        return $this->container['product_ids'];
    }

    /**
     * Sets product_ids
     * @param int[] $product_ids
     * @return $this
     */
    public function setProductIds($product_ids)
    {
        $this->container['product_ids'] = $product_ids;

        return $this;
    }

    /**
     * Gets document_ids
     * @return int[]
     */
    public function getDocumentIds()
    {
        return $this->container['document_ids'];
    }

    /**
     * Sets document_ids
     * @param int[] $document_ids
     * @return $this
     */
    public function setDocumentIds($document_ids)
    {
        $this->container['document_ids'] = $document_ids;

        return $this;
    }

    /**
     * Gets invoice_ids
     * @return int[]
     */
    public function getInvoiceIds()
    {
        return $this->container['invoice_ids'];
    }

    /**
     * Sets invoice_ids
     * @param int[] $invoice_ids
     * @return $this
     */
    public function setInvoiceIds($invoice_ids)
    {
        $this->container['invoice_ids'] = $invoice_ids;

        return $this;
    }

    /**
     * Gets config_ids
     * @return int[]
     */
    public function getConfigIds()
    {
        return $this->container['config_ids'];
    }

    /**
     * Sets config_ids
     * @param int[] $config_ids
     * @return $this
     */
    public function setConfigIds($config_ids)
    {
        $this->container['config_ids'] = $config_ids;

        return $this;
    }

    /**
     * Gets total
     * @return double
     */
    public function getTotal()
    {
        return $this->container['total'];
    }

    /**
     * Sets total
     * @param double $total
     * @return $this
     */
    public function setTotal($total)
    {
        $this->container['total'] = $total;

        return $this;
    }

    /**
     * Gets tax_total
     * @return double
     */
    public function getTaxTotal()
    {
        return $this->container['tax_total'];
    }

    /**
     * Sets tax_total
     * @param double $tax_total
     * @return $this
     */
    public function setTaxTotal($tax_total)
    {
        $this->container['tax_total'] = $tax_total;

        return $this;
    }

    /**
     * Gets _info
     * @return \Spinen\ConnectWise\Clients\Sales\Model\Metadata
     */
    public function getInfo()
    {
        return $this->container['_info'];
    }

    /**
     * Sets _info
     * @param \Spinen\ConnectWise\Clients\Sales\Model\Metadata $_info Metadata of the entity
     * @return $this
     */
    public function setInfo($_info)
    {
        $this->container['_info'] = $_info;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     * @param  integer $offset Offset
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     * @param  integer $offset Offset
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     * @param  integer $offset Offset
     * @param  mixed   $value  Value to be set
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     * @param  integer $offset Offset
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(\Spinen\ConnectWise\Clients\Sales\ObjectSerializer::sanitizeForSerialization($this), JSON_PRETTY_PRINT);
        }

        return json_encode(\Spinen\ConnectWise\Clients\Sales\ObjectSerializer::sanitizeForSerialization($this));
    }
}


